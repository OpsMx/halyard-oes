FROM registry.access.redhat.com/ubi8/ubi:8.8 as java-builder
LABEL maintainer="OpsMx"
ARG JAVA_PACKAGE=java-17-openjdk-jmods

# Update and install necessary packages with security patches
RUN yum -y update && yum -y install --nodocs ${JAVA_PACKAGE} && yum clean all

# Build a custom JRE.
WORKDIR /jrebuild
RUN java --list-modules | cut -d'@' -f1 > modules
RUN jlink --output runtime --add-modules `paste -sd, - < modules` --compress 2 --vm server

FROM registry.access.redhat.com/ubi8/ubi:8.8 AS java-base
LABEL maintainer="OpsMx"
COPY --from=java-builder /jrebuild/runtime /opsmx-java-runtime

# Set up environment variables
ARG OPSMXUSER=1001
ENV JAVA_HOME=/opsmx-java-runtime \
    PATH=${PATH}:/opsmx-java-runtime/bin \
    WORK_DIR=/opsmx/workdir \
    CONF_DIR=/opsmx/conf

# Enabling fips mode and updating crypto policies
RUN fips-mode-setup --enable && \
    update-crypto-policies --set FIPS

# AWS CLI installation in a separate layer for better caching
FROM java-builder AS awscli-install
RUN yum install -y unzip && \
    curl -fSL https://awscli.amazonaws.com/awscli-exe-linux-`uname -m`.zip -o awscliv2.zip && \
    unzip awscliv2.zip && \
    ./aws/install && \
    rm -rf awscliv2.zip

# Base image for AWS CLI and kubectl setup
FROM java-builder AS base
COPY --from=awscli-install /usr/local/aws-cli /usr/local/aws-cli/

# Ensure symlinks are created properly
RUN ln -sf /usr/local/aws-cli/v2/current/bin/aws /usr/local/bin/aws && \
    ln -sf /usr/local/aws-cli/v2/current/bin/aws_completer /usr/local/bin/aws_completer

# Install and update security-critical packages
RUN yum -y install git bash curl wget binutils bzip2-libs  
RUN yum -y install ca-certificates-2024.2.69_v8.0.303-80.0.el8_10 


# CVE FIX , Install specific versions of libraries to avoid vulnerabilities
RUN wget https://tsn.miraclelinux.com/system/files/AXS8/x86_64/UPDATE/RPMS/expat-2.2.5-15.el8_10.x86_64.rpm && \
    rpm -Uvh --force expat-2.2.5-15.el8_10.x86_64.rpm && \
    wget https://fr2.rpmfind.net/linux/almalinux/8.10/BaseOS/x86_64/os/Packages/krb5-libs-1.18.2-29.el8_10.x86_64.rpm && \
    rpm -Uvh --force krb5-libs-1.18.2-29.el8_10.x86_64.rpm

# Install kubectl from a specific version and source
ENV KUBECTL_VERSION=v1.31.0
ENV KUBECTL_RELEASE=1.15.10
ENV AWS_BINARY_RELEASE_DATE=2020-02-22

# Ensure kubectl and aws-iam-authenticator are correctly installed
RUN wget https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl && \
    chmod +x kubectl && \
    mv ./kubectl /usr/local/bin/kubectl

RUN curl -f -o /usr/local/bin/aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/${KUBECTL_RELEASE}/${AWS_BINARY_RELEASE_DATE}/bin/linux/amd64/aws-iam-authenticator && \
    chmod +x /usr/local/bin/aws-iam-authenticator

# Set up halyard environment
COPY halyard-web/build/install/halyard /opt/halyard
RUN echo '#!/usr/bin/env bash' > /usr/local/bin/hal && \
    echo '/opt/halyard/bin/hal "$@"' >> /usr/local/bin/hal && \
    chmod +x /usr/local/bin/hal

RUN yum -y remove tar vim vi wget 
RUN yum clean all

# Create a user and use it for running the app
RUN adduser spinnaker
USER spinnaker

CMD ["/opt/halyard/bin/halyard"]
